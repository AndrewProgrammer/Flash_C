#include <fstream>
Потоки бывают: ifstream - входной поток,ofstream - выходной поток,fstream - двунаправленный поток.
void OpenSource()
	{
		ofstream of("E:\\Test.txt");
		if (of.is_open())
		{
			of << 3 << 4.18 << "Hello";//ofstream принимает все так как он конвертирует сразу все данные 
			//Date d;Для того чтобы это работало нужно перегрузить operator << в классе Date
			//of << d;
			of.close();
		}
	}
-------------------------------------------------------------------------------
Если 0000 0000 , то самый последней ноль слева(самый крайний слева), отвечает за отрицательное или положительное число.
Пример:
 2 0000 0010
~2 1111 1101
-2 1111 1110
Битовые операции:
	0000 0001// - Самое первое
	0000 0010
| 	0000 0011
&	0000 0000
^	0000 0011
~	1111 1110// - Самое первое
	0011 1100
>>3	0000 0111
Пример с отрицательным числом и типом signed(знаковый):
Было    1001 1100
Происходит битовый сдвиг вправо на 3(то есть >>3)
Стало   1001 0011
-------------------------------------------------------------------------
В потоках мы используем байты.
enum _Openmode{int = 0x01,out = 0x02,binary = 0x04,app = 0x08}//Бывают значение: 0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80
Например: ofstream of("Путь и название файла", ios::in|ios::out);///Также бывают ios::binary,ios::ate(В конец),ios::trunc(усечение до нулевой длины)
Входной поток:ifstream f("Путь и название файла", ios::in|ios::out);
f.eof() - возвращает true если конец достигнут
int a;
f >> a;
Для бинарных записей и считываний:
int a;
//ofstream
of.write((char*)& a,sizeof(int))//Принимает указатель на массив байт,и размер( в данном случаи 4) так как тип данных int
//ifstream
f.read((char*)& a, sizeof(int))//Принимает указатель на массив байт,и размер( в данном случаи 4)так как тип данных int
----------------------------------------------------------------------------
Существуют в потоках два указателя : get,put.
Для этого мы используем:
f.seekg(10,ios::beg)//Get указатель смещается на начало а потом на 10 байтов от начало(также есть ios::cur,ios::end)
           ios::cur
	   ios::end
f.seekp(10,ios::beg)//Put указатель смещается на начало а потом на 10 байтов от начало(также есть ios::cur,ios::end)
	   ios::cur
           ios::end
f.tellg() // Возращают текущие позиции указателей внутри потока
f.tellp() // Возращают текущие позиции указателей внутри потока
---------------------------------------------------------------------------
у потока istream есть функция:
f.gcount()//Возвращает количество байт считанных прошлой input операцией
of.pcount()//Возвращает количество байт считанных прошлой output операцией