Список инициализаторов - необходим для того чтобы проинициализировать поля класса.
Агрегация - один класс содержит другой класс. Например в классе Group есть класс Human.
Для создания полей которые обладают пользовательским типом(class) всегда вызывается свой конструктор по умолчанию.
У каждого конструктора свой список инициализаторов(ВАЖНО!)
class Foo
{
private:
	int m_value;// поле класса -(C++ 11 m_value = B)
	int m_age;// поле класса
	Bar b;//Другой класс (Bar) в котором есть параметризированный конструктор.
public:
	Foo():m_value(7);//Конструктор С++ 11
	Foo(double = 1.3);//Конструктор С++ 11
Конструктор<-Foo(int value): m_value(value),m_age(ID) - список инициализаторов, в том порядке в котором инициализированны поля класса
	     {
		//m_value = value; - не нужно.
	     }
	     Foo(int value): b(Bav(3,7)),value(5)
	     Foo(int value): b((CreateBar())//функция
}
Когда нужен список инициализации:
1.Поле класса у нас const.
2.Если поле класса ссылка.
3.Когда у поля класса нету конструктора по умолчанию, если не будет в списке инициализации конструктора по умолчанию то компилятор автоматически при создании обратиться к конструктору по умолчанию.
Делегирования конструкторов - перенаправления вызова с одного конструктора на другой.