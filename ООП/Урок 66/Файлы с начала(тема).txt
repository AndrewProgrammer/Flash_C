#include <cstdio> //Это библиотека для работы с файлами на языке программирования С++
В файле нет - \0.
Переход на новую строку - \r - возврат коретки,\n;
CRLF - /r/n;
Файлы делятся на бинарные и текстовые:1) Текстовые файлы - это файлы в которых мы можем увидеть нормальные слова. 2) Бинарные файлы - это файлы которые при открытии показывают символы( как правило они не понятные)
Точка доступа к файлу - это дескриптор файла.
Файл поддерживает чтение и запись.
Для открытия файлов у нас есть функция fopen() -> Она принимает 2 параметра типа string.
Путь к файлу бывает относительный либо полный
Режимы открытия файлов: w - писать(полностью задирается и начинается с первого), a - дозапись( в конец), r - читать(сохраняет все и читает), w+ - писать и читать, a+ - писать и читать, r+ - читать и писать.
Например:
Относительный:
Текстовый файл:
void main()
{
	FILE * f = fopen("dir\\file.txt", "w+");
	if (f != nullptr)
	{
		char c = fgetc(f);//Принимает дескриптор файла и возвращает код символа, который считался, и указатель сдвигается на +1.
		char str[256] = {}; // buffer
		//Если строка больше максимального размера тогда нам покажут на один элемент меньше, то есть до /r/n;
		fgets(str, 256, f);//Передаем что мы хотим считать, потом максимальный размер сколько мы хотим считать, и дальше какой файл.
		//Запись в файл
		fputc('x', f); // Принимает символ который нужно записать, и файл, после записи смещается на величину записанных данных.
		fputs("Hello", f); // Принимает строку в файл,дескриптор файла, если вы хотите переход на новую строку то пишем /r/n прямо в Hello то есть примерно так: ("Hello/r/n");
		feof(f); //Возвращает не 0 если достигнут конец файла, а если достигнут то 0.
		rewind(f);//Перемещает указатель файла на начало файла.
		fseek(f,10,SEEK_SET);//Перемещение по файлу, принимает файл, значение на сколько нужно переместиться, а дальше принимает наше движение.Движения бывает: SEEK_SET - с самого начала,SEEK_END - с конца,SEEK_CUR - с той позиции где стоит указатель файла.
		fclose(f);
	}
}
Бинарный файл:
Режимы открытия бинарного файла: wb - писать(полностью задирается и начинается с первого), ab - дозапись( в конец), rb - читать(сохраняет все и читает), w+b - писать и читать, a+b - писать и читать, rb+ - читать и писать.
void main()
{
	FILE * f = fopen("dir\\file.txt", "wb+");
	if (f != nullptr)
	{
		int a = 7;
		double b = 3.14;
		char str[] = "Hello";
		fwrite(&a,sizeof(a),1,f);//Мы хотим записать в файл, примает 4 параметра: Адрес начала данных те которые нужно записать, тип данных,размер одной единицы данных,дескриптор файла
		fwrite(&b,sizeof(b),1,f);//Мы хотим записать в файл, примает 4 параметра: Адрес начала данных те которые нужно записать, тип данных,размер одной единицы данных,дескриптор файла
		fwrite(str,sizeof(char),5,f);//Мы хотим записать строку все теже 4 параметра
		int a1;
		double b1;
		char str1[6] = {};
		fread(&a1,sizeof(a1),1,f);//Куда мы хотим считать, все остальное те же параметры
		fread(&b1,sizeof(b1),1,f);
		fread(str1,sizeof(char),5,f);
		fclose(f);
	}
}
Минус бинарного файла в том что мы его не сможет редактировать, без определенной программы, но он безопасен так как скрытый от глаз любого пользователя, только сам хозяин кода знает что там написал.