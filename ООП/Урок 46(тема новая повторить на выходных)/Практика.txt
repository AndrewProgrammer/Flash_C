explisit String(const String&s,int startIndex = 0(Параметр по умолчанию));- явно объявленый конструктор, не будет конструктора по умолчанию.Конструктор копирования не нужен, так этот конструктор выполняет функции конструктора копирования.
Так как конструктор копирования принимает вот такой параметр: const String& s
Именно в этом методе класса нужно  дописать реализацию конструктора копирования.
explicit - можно поставить,так как тут конструктор с одним параметром, и с параметром по умолчанию
Этот конструктор можно вызвать:
String(uint capacity);
String F();
String* F(); 
const String & F();// без верхнего конструктора с explicit
const String*&F();// - нет, так как указатель мы сразу передаем на объект
const String* const & F();// - нет, выше причина
void man()
{
	String s1(s2,3);
	String s1(s2);
	String s1 = s2; //нельзя,запрещает присваивание.
	String s1 = 0; // отработает но уже ко второму конструктору,если explicit то не работает потому что нельзя  = писатьб , только ()
	String s1(0);//отработает но уже ко второму конструктору
	String s1 = F();//для того чтобы вызвался конструктор копирования должно стоять выражение с типом возвращаемого значения нашим классом.Не раблотает
	String s1 = F();// не работают,если разыменуем скомпилируется
	String s1 = F();//скомпилируется,так вызывается первый конструктор копирования(не обез explicit)
}