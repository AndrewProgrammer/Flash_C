Семантика С++ 11, семантика переноса
lvalue - все что может стоять слева от знака присваивания,rvalue - соотвественно все что справа.
lvalue -это именнованые объекты и динамическая память на которую мы имеем указаталей.
Например:
int a;//modified
a = 5;//lvalue
int * = new A;//lvalue
Пример rvalue:
5 = a;
(a + 5)  = b; //rvalue(запрещенно присваивание)
Если есть функция:
int F();
F() = 5;//rvalue(нельзя так написать)
Сыллка является lvalue(поэтому ее можно использовать)
const int a;//not modified
a = 5;//нельзя так написать
----------------------------------------------------------------------------------------------
lvalue - В С++ modified lvalue(можно присваивать).
Пример:
String Create()
{
	String s;//объект раз
	Append...//и все остальное
	return s;	
}
void main()
{
	String s1 = Create();//Второй объект
}
Оптимизации в компиляторах:
1)RV0 - Return Value Optimization.
Пример:
String Create()
{
	return String("Hello");//Первый объект. Анонимный объект(Следовательно идет ссылка на уже умерший объект.
	//Если в return находиться анонимный объект то он сразу передаеться в main
}
void main()
{
	String s1 = Create();//Второй объект
}
Анонимный объект - String(...);
2)NRVO - Named Return Value Optimization
String Create()
{
	String a("Hello");//Именнованый объект который сразу пойдет в main
	...//разные функции для работы
	return a;//Возврат именнованого объекта.
}
void main()
{
	String s1 = Create();//Второй объект
}
ВРЕМЕННЫЙ ОБЪЕКТ - Rvalue и для него используется кража памяти с помощью вот такого (&&)
НЕВРЕМЕННЫЙ ОБЪЕКТ - Lvalue и для него используется передача по ссылке с помощью (&)
Rvalue принимает только своих Rvalue
для того чтобы перенести lvalue нужно подключить библиотеку type_traits и использовать для объекта функцию move() 
Чтобы получился в классе один конструктор - нужно в классе сделать один конструктор копирования,из за чего не будет создаваться конструктор  по умолчанию
--------------------------------------------------------------------------------------------------------
В пустом классе до С++11: Конструктор копирования, оператор присваивания, по умолчанию, деструктор(4 всего)
После С++11 в пустом классе:Конструктор копирования, присваивания, по умолчанию, деструктор,конструктор переноса и оператор присваивания переноса.(6 всего)