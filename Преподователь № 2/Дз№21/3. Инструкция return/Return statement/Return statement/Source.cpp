#include <iostream>
using namespace std;

// Функция возвращает значение. Эта функция может стоять в выражении, т.к. на место вызова будет подставлено значение определенного типа.
// Тип явно указан перед именем функции - это int. Значит функция возвращает int.
int sum (int first, int second)
{
	int result = first + second;

	// Инструкция (statement) return - используется для прекращения выполнения функции в указанном месте и возврата значения на место вызова.
	// В данном случае функция в этой строчке прекратит свою работу, значение из переменной result будет СКОПИРОВАНО на место вызова функции.
	return result;

	// Этот код никогда не выполнится, ибо в предыдущей строчке сработал return и функция прекратила свою работу.
	cout << "You won't see this piece of text ever..." << endl;
}


void main ()
{
	/*
		Функция может возвращать какое-то значение (результат) на место вызова в выражение.
		В таком случае, при объявлении в качестве типа возвращаемого значение должен стоять какой-то нормальный тип данных, а не void.

		Например:
			int sum (int first, int second)
			...

			Здесь функция принимает 2 аргумента типа int и возвращает на место вызова результат - значение типа int.
	
	*/

	int summa = sum (2, 3); // Функция sum возвращает значение типа int. После выполнения return в функции sum, значение, 
							// которое прописано в return будет СКОПИРОВАНО сюда в выражение, на место вызова функции sum. И это значение мы КОПИРУЕМ в переменную summa.

	cout << "Result of summa = " << summa << endl;


	// Т.к. функция sum возвращает значение типа int она может быть частью ЛЮБОГО выражения где допустимо использование значения типа int.
	cout << "Result: " << 2 + sum (5, 8 * 3 + 1) / 10.0 + 4 << endl;
}